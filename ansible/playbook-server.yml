- name: Setup kubernetes servers
  hosts: servers
  become: yes
  vars:
    etcd_dir: /opt/etcd
    etcd_data_dir: /var/lib/etcd
    apiserver_data_dir: /var/lib/kubernetes

  tasks:
  - name: Set hostname
    ansible.builtin.hostname:
      name: "{{ inventory_hostname }}"

  - name: Check fqdn"
    ansible.builtin.command: grep -F "{{ inventory_hostname }}.kubernetes.local" /etc/hosts
    register: contains_fqdn
    check_mode: no
    ignore_errors: yes
    changed_when: no

  - name: Set fqdn
    ansible.builtin.command: "sed -i 's/^127.0.1.1.*/127.0.1.1\t{{ inventory_hostname }}.kubernetes.local {{ inventory_hostname }}/' /etc/hosts"
    when: contains_fqdn.rc == 1

  - name: Create etcd dir
    ansible.builtin.file:
      path: "{{ etcd_dir }}"
      state: directory
      mode: '0755'

  - name: Create etcd data dir
    ansible.builtin.file:
      path: "{{ etcd_data_dir }}"
      state: directory
      mode: '0755'

  - name: Extract etcd
    ansible.builtin.unarchive:
      src: https://github.com/etcd-io/etcd/releases/download/v3.4.27/etcd-v3.4.27-linux-amd64.tar.gz
      dest: "{{ etcd_dir }}"
      remote_src: yes
      extra_opts: ['--strip-components=1']
    notify: Restart etcd

  - name: Template etcd unit
    ansible.builtin.template:
      src: template/etcd-unit.j2
      dest: /etc/systemd/system/etcd.service
      mode: '0644'
    notify: Restart etcd

  - name: Reload systemd
    systemd:
      daemon_reload: yes

  - name: Start etcd
    ansible.builtin.systemd_service:
      state: started
      name: etcd

  - name: Create apiserver data dir
    ansible.builtin.file:
      path: "{{ apiserver_data_dir }}"
      state: directory
      mode: '0755'

  - name: Download apiserver
    ansible.builtin.get_url:
      url: https://storage.googleapis.com/kubernetes-release/release/v1.28.3/bin/linux/amd64/kube-apiserver
      dest: /usr/local/bin/kube-apiserver
      mode: '0755'
    notify: Restart kube-apiserver

  - name: Template apiserver unit
    ansible.builtin.template:
      src: template/kube-apiserver-unit.j2
      dest: /etc/systemd/system/kube-apiserver.service
      mode: '0644'
    notify: Restart kube-apiserver

  - name: Reload systemd
    systemd:
      daemon_reload: yes

  - name: Copy enc config
    ansible.builtin.copy:
      src: files/encryption_config.yaml
      dest: "{{ apiserver_data_dir }}/encryption-config.yaml"
      mode: '0600'

  - name: Copy service-accounts key
    ansible.builtin.copy:
      src: certs/service-accounts.key
      dest: "{{ apiserver_data_dir }}/service-accounts.key"
      mode: '0600'
    notify: Restart kube-apiserver

  - name: Copy service-accounts crt
    ansible.builtin.copy:
      src: certs/service-accounts.crt
      dest: "{{ apiserver_data_dir }}/service-accounts.crt"
      mode: '0600'
    notify: Restart kube-apiserver

  - name: Copy kube-api-server key
    ansible.builtin.copy:
      src: certs/kube-api-server.key
      dest: "{{ apiserver_data_dir }}/kube-api-server.key"
      mode: '0600'
    notify: Restart kube-apiserver

  - name: Copy kube-api-server crt
    ansible.builtin.copy:
      src: certs/kube-api-server.crt
      dest: "{{ apiserver_data_dir }}/kube-api-server.crt"
      mode: '0600'
    notify: Restart kube-apiserver

  - name: Copy ca crt
    ansible.builtin.copy:
      src: certs/ca.crt
      dest: "{{ apiserver_data_dir }}/ca.crt"
      mode: '0600'
    notify: Restart kube-apiserver

  - name: Start apiserver
    ansible.builtin.systemd_service:
      state: started
      name: etcd

  handlers:
  - name: Restart etcd
    service:
      name: etcd
      state: restarted
  - name: Restart kube-apiserver
    service:
      name: kube-apiserver
      state: restarted